package es.ramondin.performance.modelOracle.views;

import es.ramondin.performance.modelOracle.views.common.PerformanceVO;

import java.math.BigDecimal;

import java.util.ArrayList;

import oracle.jbo.ApplicationModule;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 24 16:02:12 CEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PerformanceVOImpl extends ViewObjectImpl implements PerformanceVO {
    public static final Integer INCLUIR_EXCEPCIONES = 0;
    public static final Integer NO_INCLUIR_EXCEPCIONES = 5;
    public static final Integer SOLO_EXCEPCIONES = 2;
    
    private static final String TXT_CAMPO_ANUAL_BD = "SUM(NULL) AS PERF_DATO_ANUAL";
    private static final String TXT_CAMPO_MENSUAL_BD = "SUM(NULL) AS PERF_DATO_MENSUAL";
    
    /**
     * This is the default constructor (do not remove).
     */
    public PerformanceVOImpl() {
    }
    
    public void executeWithParamsEdit(BigDecimal seccion, BigDecimal celula, Integer celulaAgrup, ArrayList celulasExcepcion, Integer anoRuptura, Integer anosHistorico, Integer hastaFecha) {
        if (celulaAgrup != null) { //Es una agrupación
            //Si es INCLUIR_EXCEPCIONES no es necesario hacer ningún filtro
            if (!celulaAgrup.equals(INCLUIR_EXCEPCIONES) && celulasExcepcion != null) {
                int iniGroupByOrderBySQL = this.getQuery().lastIndexOf("GROUP BY");
                
                //Aplicamos la claúsula correspondiente
                String whereClauseExtra = "";
                
                if (celulaAgrup.equals(NO_INCLUIR_EXCEPCIONES)) {
                    whereClauseExtra = "1 = 1";
                    for (int i = 0; i < celulasExcepcion.size(); i++) {
                        whereClauseExtra += " AND " + this.getAttributeDef(PerformanceVORowImpl.PERFCELULA).getColumnName() + " <> " + (BigDecimal)celulasExcepcion.get(i);
                    }
                } else if (celulaAgrup.equals(SOLO_EXCEPCIONES)) {
                    whereClauseExtra = "1 = 0";
                    for (int i = 0; i < celulasExcepcion.size(); i++) {
                        whereClauseExtra += " OR " + this.getAttributeDef(PerformanceVORowImpl.PERFCELULA).getColumnName() + " = " + (BigDecimal)celulasExcepcion.get(i);
                    }
                }
                
                if (whereClauseExtra.trim().length() > 5) {
                    this.setQuery(this.getQuery().substring(0, iniGroupByOrderBySQL - 1) + "\n    AND (" + whereClauseExtra.trim() + ")\n" + this.getQuery().substring(iniGroupByOrderBySQL));
                }
            }
        }
        
        Number seccionNumber = seccion == null ? null : new Number(seccion.intValue());
        Number celulaNumber = celula == null ? null : new Number(celula.intValue());

        this.setPerfEmpresaBV(new Number(1));
        this.setPerfSeccionBV(seccionNumber);
        this.setPerfCelulaBV(celulaNumber);
        this.setAnoRupturaBV(new Number(anoRuptura.intValue()));
        this.setAnosHistoricoBV(new Number(anosHistorico.intValue()));
        this.setHastaFechaBV(new Number(hastaFecha.intValue()));
        
        this.executeQuery();
    }
    
    public void setQuerySQL(String querySQL) {
        this.setQuery(querySQL);
    }

    public String getQuerySQL() {
        return this.getQuery();
    }
    
    public void setCamposAnualMensualBD() {
        ApplicationModule am = this.getApplicationModule();
        
        GraficoVOImpl graficoImp = (GraficoVOImpl)am.findViewObject("Grafico");
        GraficoVORowImpl rowGrafico = (GraficoVORowImpl)graficoImp.getCurrentRow();
        
        if (rowGrafico != null) {
            if (rowGrafico.getMgraCampoAnual() != null)
                setCampoDatoAnualBD(rowGrafico.getMgraCampoAnual());
            if (rowGrafico.getMgraCampoMensual() != null)
                setCampoDatoMensualBD(rowGrafico.getMgraCampoMensual());
        }
    }
    
    private void setCampoDatoAnualBD(String campoAnualBD) {
        this.setQuery(this.getQuery().replace(TXT_CAMPO_ANUAL_BD, campoAnualBD + " AS PERF_DATO_ANUAL"));
    }

    private void setCampoDatoMensualBD(String campoMensualBD) {
        this.setQuery(this.getQuery().replace(TXT_CAMPO_MENSUAL_BD, campoMensualBD + " AS PERF_DATO_MENSUAL"));
    }

    /**
     * Returns the bind variable value for PerfEmpresaBV.
     * @return bind variable value for PerfEmpresaBV
     */
    public Number getPerfEmpresaBV() {
        return (Number)getNamedWhereClauseParam("PerfEmpresaBV");
    }

    /**
     * Sets <code>value</code> for bind variable PerfEmpresaBV.
     * @param value value to bind as PerfEmpresaBV
     */
    public void setPerfEmpresaBV(Number value) {
        setNamedWhereClauseParam("PerfEmpresaBV", value);
    }

    /**
     * Returns the bind variable value for PerfSeccionBV.
     * @return bind variable value for PerfSeccionBV
     */
    public Number getPerfSeccionBV() {
        return (Number)getNamedWhereClauseParam("PerfSeccionBV");
    }

    /**
     * Sets <code>value</code> for bind variable PerfSeccionBV.
     * @param value value to bind as PerfSeccionBV
     */
    public void setPerfSeccionBV(Number value) {
        setNamedWhereClauseParam("PerfSeccionBV", value);
    }

    /**
     * Returns the bind variable value for PerfCelulaBV.
     * @return bind variable value for PerfCelulaBV
     */
    public Number getPerfCelulaBV() {
        return (Number)getNamedWhereClauseParam("PerfCelulaBV");
    }

    /**
     * Sets <code>value</code> for bind variable PerfCelulaBV.
     * @param value value to bind as PerfCelulaBV
     */
    public void setPerfCelulaBV(Number value) {
        setNamedWhereClauseParam("PerfCelulaBV", value);
    }

    /**
     * Returns the bind variable value for AnoRupturaBV.
     * @return bind variable value for AnoRupturaBV
     */
    public Number getAnoRupturaBV() {
        return (Number)getNamedWhereClauseParam("AnoRupturaBV");
    }

    /**
     * Sets <code>value</code> for bind variable AnoRupturaBV.
     * @param value value to bind as AnoRupturaBV
     */
    public void setAnoRupturaBV(Number value) {
        setNamedWhereClauseParam("AnoRupturaBV", value);
    }

    /**
     * Returns the bind variable value for AnosHistoricoBV.
     * @return bind variable value for AnosHistoricoBV
     */
    public Number getAnosHistoricoBV() {
        return (Number)getNamedWhereClauseParam("AnosHistoricoBV");
    }

    /**
     * Sets <code>value</code> for bind variable AnosHistoricoBV.
     * @param value value to bind as AnosHistoricoBV
     */
    public void setAnosHistoricoBV(Number value) {
        setNamedWhereClauseParam("AnosHistoricoBV", value);
    }

    /**
     * Returns the bind variable value for HastaFechaBV.
     * @return bind variable value for HastaFechaBV
     */
    public Number getHastaFechaBV() {
        return (Number)getNamedWhereClauseParam("HastaFechaBV");
    }

    /**
     * Sets <code>value</code> for bind variable HastaFechaBV.
     * @param value value to bind as HastaFechaBV
     */
    public void setHastaFechaBV(Number value) {
        setNamedWhereClauseParam("HastaFechaBV", value);
    }
}
