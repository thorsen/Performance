package es.ramondin.performance.modelOracle.views;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 15 12:18:56 CEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IshikawaLinVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        MishIdC {
            public Object get(IshikawaLinVORowImpl obj) {
                return obj.getMishIdC();
            }

            public void put(IshikawaLinVORowImpl obj, Object value) {
                obj.setMishIdC((Number)value);
            }
        }
        ,
        MishIdL {
            public Object get(IshikawaLinVORowImpl obj) {
                return obj.getMishIdL();
            }

            public void put(IshikawaLinVORowImpl obj, Object value) {
                obj.setMishIdL((Number)value);
            }
        }
        ,
        MishIdTgrCausa {
            public Object get(IshikawaLinVORowImpl obj) {
                return obj.getMishIdTgrCausa();
            }

            public void put(IshikawaLinVORowImpl obj, Object value) {
                obj.setMishIdTgrCausa((String)value);
            }
        }
        ,
        MishIdGraCausa {
            public Object get(IshikawaLinVORowImpl obj) {
                return obj.getMishIdGraCausa();
            }

            public void put(IshikawaLinVORowImpl obj, Object value) {
                obj.setMishIdGraCausa((Number)value);
            }
        }
        ,
        Grafico {
            public Object get(IshikawaLinVORowImpl obj) {
                return obj.getGrafico();
            }

            public void put(IshikawaLinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(IshikawaLinVORowImpl object);

        public abstract void put(IshikawaLinVORowImpl object, Object value);

        public int index() {
            return IshikawaLinVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return IshikawaLinVORowImpl.AttributesEnum.firstIndex() + IshikawaLinVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = IshikawaLinVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MISHIDC = AttributesEnum.MishIdC.index();
    public static final int MISHIDL = AttributesEnum.MishIdL.index();
    public static final int MISHIDTGRCAUSA = AttributesEnum.MishIdTgrCausa.index();
    public static final int MISHIDGRACAUSA = AttributesEnum.MishIdGraCausa.index();
    public static final int GRAFICO = AttributesEnum.Grafico.index();

    /**
     * This is the default constructor (do not remove).
     */
    public IshikawaLinVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute MishIdC.
     * @return the MishIdC
     */
    public Number getMishIdC() {
        return (Number) getAttributeInternal(MISHIDC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MishIdC.
     * @param value value to set the  MishIdC
     */
    public void setMishIdC(Number value) {
        setAttributeInternal(MISHIDC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MishIdL.
     * @return the MishIdL
     */
    public Number getMishIdL() {
        return (Number) getAttributeInternal(MISHIDL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MishIdL.
     * @param value value to set the  MishIdL
     */
    public void setMishIdL(Number value) {
        setAttributeInternal(MISHIDL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MishIdTgrCausa.
     * @return the MishIdTgrCausa
     */
    public String getMishIdTgrCausa() {
        return (String) getAttributeInternal(MISHIDTGRCAUSA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MishIdTgrCausa.
     * @param value value to set the  MishIdTgrCausa
     */
    public void setMishIdTgrCausa(String value) {
        setAttributeInternal(MISHIDTGRCAUSA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MishIdGraCausa.
     * @return the MishIdGraCausa
     */
    public Number getMishIdGraCausa() {
        return (Number) getAttributeInternal(MISHIDGRACAUSA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MishIdGraCausa.
     * @param value value to set the  MishIdGraCausa
     */
    public void setMishIdGraCausa(Number value) {
        setAttributeInternal(MISHIDGRACAUSA, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Grafico.
     */
    public RowIterator getGrafico() {
        return (RowIterator)getAttributeInternal(GRAFICO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
