package es.ramondin.performance.modelOracle.views;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 19 08:44:12 CEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MarkerEspecialVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        MmesIdTipoGra {
            public Object get(MarkerEspecialVORowImpl obj) {
                return obj.getMmesIdTipoGra();
            }

            public void put(MarkerEspecialVORowImpl obj, Object value) {
                obj.setMmesIdTipoGra((String)value);
            }
        }
        ,
        MmesIdGra {
            public Object get(MarkerEspecialVORowImpl obj) {
                return obj.getMmesIdGra();
            }

            public void put(MarkerEspecialVORowImpl obj, Object value) {
                obj.setMmesIdGra((Number)value);
            }
        }
        ,
        MmesConsultaSql {
            public Object get(MarkerEspecialVORowImpl obj) {
                return obj.getMmesConsultaSql();
            }

            public void put(MarkerEspecialVORowImpl obj, Object value) {
                obj.setMmesConsultaSql((String)value);
            }
        }
        ,
        MmesColor {
            public Object get(MarkerEspecialVORowImpl obj) {
                return obj.getMmesColor();
            }

            public void put(MarkerEspecialVORowImpl obj, Object value) {
                obj.setMmesColor((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MarkerEspecialVORowImpl object);

        public abstract void put(MarkerEspecialVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MMESIDTIPOGRA = AttributesEnum.MmesIdTipoGra.index();
    public static final int MMESIDGRA = AttributesEnum.MmesIdGra.index();
    public static final int MMESCONSULTASQL = AttributesEnum.MmesConsultaSql.index();
    public static final int MMESCOLOR = AttributesEnum.MmesColor.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MarkerEspecialVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute MmesIdTipoGra.
     * @return the MmesIdTipoGra
     */
    public String getMmesIdTipoGra() {
        return (String) getAttributeInternal(MMESIDTIPOGRA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MmesIdTipoGra.
     * @param value value to set the  MmesIdTipoGra
     */
    public void setMmesIdTipoGra(String value) {
        setAttributeInternal(MMESIDTIPOGRA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MmesIdGra.
     * @return the MmesIdGra
     */
    public Number getMmesIdGra() {
        return (Number) getAttributeInternal(MMESIDGRA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MmesIdGra.
     * @param value value to set the  MmesIdGra
     */
    public void setMmesIdGra(Number value) {
        setAttributeInternal(MMESIDGRA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MmesConsultaSql.
     * @return the MmesConsultaSql
     */
    public String getMmesConsultaSql() {
        return (String) getAttributeInternal(MMESCONSULTASQL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MmesConsultaSql.
     * @param value value to set the  MmesConsultaSql
     */
    public void setMmesConsultaSql(String value) {
        setAttributeInternal(MMESCONSULTASQL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MmesColor.
     * @return the MmesColor
     */
    public String getMmesColor() {
        return (String) getAttributeInternal(MMESCOLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MmesColor.
     * @param value value to set the  MmesColor
     */
    public void setMmesColor(String value) {
        setAttributeInternal(MMESCOLOR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
