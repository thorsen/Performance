package es.ramondin.performance.modelOracle.views;


import es.ramondin.performance.modelOracle.views.common.MarkerVO;

import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 24 15:52:14 CEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MarkerVOImpl extends ViewObjectImpl implements MarkerVO {
    /**
     * This is the default constructor (do not remove).
     */
    public MarkerVOImpl() {
    }
    
    private void aplicarViewCriteria(java.sql.Date desdeFecha) {
        if (desdeFecha == null)
            desdeFecha = new java.sql.Date(System.currentTimeMillis());
        
        ViewCriteria vc = this.getViewCriteria("MarkerVOCriteria");
        this.setMmarDesdeFechaBV(new oracle.jbo.domain.Date(desdeFecha));
        this.applyViewCriteria(vc);
    }
    
    public Double[] getValorMarkers(java.sql.Date desdeFecha) {
        Double[] res = null;
        Double valorNorma, sigma;
        
        this.aplicarViewCriteria(desdeFecha);
        
        if (this.getRowCount() > 0) {
            MarkerVORowImpl rowMarker = (MarkerVORowImpl)this.last();
            
            if (rowMarker != null && rowMarker.getMmarValorNorma() != null) {
                valorNorma = rowMarker.getMmarValorNorma().doubleValue();
                
                if (rowMarker.getMmarSigma() != null) {
                    sigma = rowMarker.getMmarSigma().doubleValue();
                    
                    if (rowMarker.getMmarSentidoMejor() == null || rowMarker.getMmarSentidoMejor().sign() >= 0)
                        res = new Double[]{valorNorma - 2.0*sigma, valorNorma, valorNorma + 2.0*sigma};
                    else
                        res = new Double[]{valorNorma + 2.0*sigma, valorNorma, valorNorma - 2.0*sigma};
                } else {
                    res = new Double[]{valorNorma};
                }
            }
        }
        
        this.removeApplyViewCriteriaName("MarkerVOCriteria");
        
        return res;
    }
    
    public Number getSentidoMejor(java.sql.Date desdeFecha) {
        Number res = null;
        
        this.aplicarViewCriteria(desdeFecha);
        
        if (this.getRowCount() > 0) {
            MarkerVORowImpl rowMarker = (MarkerVORowImpl)this.last();
            
            if (rowMarker != null)
                res = rowMarker.getMmarSentidoMejor();
        }
        
        this.removeApplyViewCriteriaName("MarkerVOCriteria");
        
        return res;
    }


    /**
     * Returns the variable value for MmarDesdeFechaBV.
     * @return variable value for MmarDesdeFechaBV
     */
    public Date getMmarDesdeFechaBV() {
        return (Date)ensureVariableManager().getVariableValue("MmarDesdeFechaBV");
    }

    /**
     * Sets <code>value</code> for variable MmarDesdeFechaBV.
     * @param value value to bind as MmarDesdeFechaBV
     */
    public void setMmarDesdeFechaBV(Date value) {
        ensureVariableManager().setVariableValue("MmarDesdeFechaBV", value);
    }


}
